# Environment Variables Configuration
# Student Management System - AI Campus Assignment

# ============================================
# DATABASE CONFIGURATION
# ============================================

# MongoDB Atlas Connection String
# Format: mongodb+srv://<username>:<password>@<cluster-url>/<database-name>?retryWrites=true&w=majority
# Get this from: MongoDB Atlas → Clusters → Connect → Connect your application
MONGODB_URI=mongodb+srv://username:password@cluster.mongodb.net/student-management?retryWrites=true&w=majority

# Example:
# MONGODB_URI=mongodb+srv://myuser:mypassword@cluster0.abc123.mongodb.net/students?retryWrites=true&w=majority


# ============================================
# JWT AUTHENTICATION
# ============================================

# Secret key for signing JWT tokens
# Generate a strong, random string (minimum 32 characters recommended)
# Use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=your-super-secret-random-string-here-change-this-in-production

# Example:
# JWT_SECRET=a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6q7r8s9t0u1v2w3x4y5z6


# ============================================
# SERVER CONFIGURATION
# ============================================

# Port number for the Express server
# Default: 3000 (will be overridden by Render in production)
PORT=3000

# Node environment (development, production, test)
# Set to 'production' on Render deployment
NODE_ENV=development


# ============================================
# OPTIONAL CONFIGURATION
# ============================================

# Session expiration time (in seconds)
# Default: 3600 (1 hour)
# SESSION_EXPIRY=3600

# CORS allowed origins (comma-separated if multiple)
# CORS_ORIGIN=http://localhost:3000,https://yourdomain.com

# Log level (error, warn, info, debug)
# LOG_LEVEL=info


# ============================================
# INSTRUCTIONS FOR SETUP
# ============================================

# 1. Copy this file and rename it to .env
#    cp .env.example .env
#
# 2. Fill in your actual values (NEVER commit .env to git!)
#
# 3. MongoDB Atlas Setup:
#    - Create free account at https://www.mongodb.com/cloud/atlas
#    - Create a new cluster (M0 free tier)
#    - Create database user with password
#    - Get connection string from "Connect" button
#    - Replace <password> with your actual password
#    - Replace <database-name> with your database name
#
# 4. JWT Secret Generation:
#    Run in terminal:
#    node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#    Copy the output and use it as JWT_SECRET
#
# 5. Save the .env file in the backend/ directory
#
# 6. Restart your server if it's running:
#    npm run dev


# ============================================
# SECURITY NOTES
# ============================================

# ⚠️  NEVER commit the .env file to version control
# ⚠️  Always use different secrets for development and production
# ⚠️  Keep your MongoDB password strong and unique
# ⚠️  Rotate JWT_SECRET periodically in production
# ⚠️  Use MongoDB Atlas IP whitelist for additional security
# ⚠️  Enable 2FA on your MongoDB Atlas account


# ============================================
# PRODUCTION DEPLOYMENT (RENDER)
# ============================================

# On Render, add these as Environment Variables in the dashboard:
# 1. Go to your Render service
# 2. Navigate to "Environment" tab
# 3. Add each variable:
#    - Key: MONGODB_URI
#    - Value: [Your MongoDB Atlas connection string]
#    - Type: Secret
#
#    - Key: JWT_SECRET
#    - Value: [Your generated secret]
#    - Type: Secret
#
#    - Key: NODE_ENV
#    - Value: production
#    - Type: Plain
#
# 4. Render will automatically use these on deployment